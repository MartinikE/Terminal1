
Linux terminal (GitBash) commands

1) Посмотреть где я --------------------pwd
2) Создать папку ----------------------  mkdir group_35
3) Зайти в только созданную папку -- cd !$ 
4) Создать 3 папки ------------------------- mkdir d1 d2 d3 
5) Зайти в любоую папку ------------------ cd d2
6) Создать 5 файлов (3 txt, 2 json) --------- touch fil1.txt file2.txt file3.txt j1.json j2.json
   содать несколько файлов можно зайдя в папку

7) Создать 3 папки вложеные ------------- mkdir -p app1/app2/app3
8) Вывести список содержимого папки -- ls -la d2
9) + Открыть любой txt файл -------------- nano file2.txt                  

                                                                                                            echo "hi!" > file3.txt
10) + написать туда что-нибудь, любой текст. -- Hello world !
11) + сохранить и выйти.------------------------- Ctrl+XY
12) Выйти из папки на уровень выше ----------- cd ..
—
13) переместить любые 2 файла, которые вы создали, в любую другую папку. -- mv d2/j1.json d2/j2.json d1
14) скопировать любые 2 файла, которые вы создали, в любую другую папку. ------------------- cp d1/j1.json d1/j2.json d3
15) Найти файл по имени ------------------------------------------------------------------------------find . -iname file*
16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает.-----tail -f  file.txt | grep search_term
                   title - просмотр файлов журнала в реальном времени
                   -f - показывает новые строки добавленные в файл
                   greep - фильтрация данных/поиск слова/документа

17) вывести несколько первых строк из текстового файла ---------------------------------------- head  filename 
                  -выводит первые 10строчек
                 -n* -задает количество выводимых строк (по умолчанию выводится 10 строк)
                 -с - количество выводимых байтов
                 -q -позволяет не добавлять информацию об именах файлов в вывод с их начальными строками
                 -v - позволяет всегда выводить информацию об именах файлов
                 -z -позволяет выводить символы завершения строк вместо символов перехода на новые строки

18) вывести несколько последних строк из текстового файла ------------------------------------- tail filname [tail * filname]
                -выводит последние 10строчек
                -f -отслеживание логов в реальном времени 10строк
                -* указать колличество строк
                 Ctrl+C - окончание просмотра   

19) просмотреть содержимое длинного файла (команда less) изучите как она работает. --------- less filename
                -a, --search-skip-screen — не осуществлять поиск в тексте, который в данный момент отображен на экране;
                -bn, --buffers=n — задать размер буфера памяти;
                 -c, --clear-screen — листать текст, полностью стирая содержимое экрана (построчная прокрутка работать не будет);
                  -Dxcolor, --color=xcolor — задать цвет отображаемого текста;
                 -E, --QUIT-AT-EOF — выйти, когда утилита достигнет конца файла;
                 -e, --quit-at-eof — выйти, когда утилита второй раз достигнет конца файла;
                 -F, --quit-if-one-screen — выйти, если содержимое файла помещается на одном экране;
                 -f, --force — открыть специальный файл;
                 -hn, --max-back-scroll=n — задать максимальное количество строк для прокрутки назад;
                 -yn, --max-forw-scroll=n — задать максимальное количество строк для прокрутки вперёд;
                  -i, --ignore-case — игнорировать регистр;
                  -I, --IGNORE-CASE — игнорировать регистр, даже если паттерн для поиска содержит заглавные буквы;
                  -jn, --jump-target=n — указать, в какой строке должна быть выведена искомая информация;
                  -J, --status-column — пометить строки, соответствующие результатам поиска;
                 -n, --line-numbers — не выводить номера строк;
                 -N, --LINE-NUMBERS — вывести номера строк;
                 -s, --squeeze-blank-lines — заменить множество идущих подряд пустых строк одной пустой строкой;
                 -w, --hilite-unread — выделить первую строку нового фрагмента текста.
                
20) вывести дату и время -------------------------------- date
=========

Задание *
1) Отправить http запрос на сервер.
http://162.55.220.72:5006/terminal-hw-request
$ curl http://162.55.220.72:5006/terminal-hw-request
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   283  100   283    0     0   2101      0 --:--:-- --:--:-- --:--:--  2111{
  "Intro": "Hello!! This is your the first response from server",
  "Tasks": {
    "Task_1": "Send the next URL in terminal: http://162.55.220.72:5005/get_method?name=(set_your_String)&age=(set_your_number)",
    "result": [
      "Your_String",
      "Your_number"
    ]
  }
}

$ curl  'http://162.55.220.72:5005/get_method?name=Kate&age=11'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    22  100    22    0     0    155      0 --:--:-- --:--:-- --:--:--   157[
  "Kate",
  "11"
]


2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13
1. создать файл с расширением .sh -- touch skript.sh
2. открыть файл для редактирования -- nano skript.sh
3. записать команды для отработки скрипта: 
#!/bin/bash

